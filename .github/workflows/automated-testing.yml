name: Automated Testing and Deployment

on:
  pull_request:
    branches: [ test ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
      
      - name: Run Tests
        run: |
          python -m pytest tests/

  # merge-to-test:
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'pull_request' && github.event.action == 'opened'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         ref: ${{ github.event.pull_request.head.ref }}
      
  #     - name: Approval Check
  #       run: |
  #         # Logic to check if the user initiating the PR is an admin
  #         # Replace this with your admin approval logic
  #         if [ ! "$(github.event.sender.login)" == "revolutionaryanusha" ]; then exit 1; fi

  #     - name: Merge to test branch
  #       run: |
  #         git config user.name 'GitHub Actions'
  #         git config user.email '<>'
  #         git checkout test
  #         git merge --no-ff ${{ github.event.pull_request.head.sha }}
  #         git push origin test

  merge-to-master:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'test'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: master
      
      - name: Create PR to merge to master
        run: |
          git config user.name 'GitHub Actions'
          git config user.email '<>'
          git checkout -b merge-to-master
          git merge --no-ff ${{ github.event.pull_request.head.sha }}
          git push origin merge-to-master
          hub pull-request -f -m "Merge test branch changes to master"

      - name: Trigger Jenkins Job for Docker Image Build
        run: |
          # Logic to trigger Jenkins job for containerization and pushing to Docker Hub
